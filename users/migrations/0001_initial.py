# Generated by Django 3.2.9 on 2021-12-05 22:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='YwryAircraft',
            fields=[
                ('aircraft_id', models.IntegerField(primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=30)),
                ('manufacturer', models.CharField(max_length=30)),
                ('number_engines', models.IntegerField()),
                ('number_fleet', models.IntegerField()),
            ],
            options={
                'db_table': 'ywry_aircraft',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryAirlAirc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ywry_airl_airc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryAirline',
            fields=[
                ('airline_id', models.IntegerField(primary_key=True, serialize=False)),
                ('airline_name', models.CharField(max_length=30)),
                ('main_hub', models.CharField(max_length=30)),
                ('headquarter_city', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'ywry_airline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryAirport',
            fields=[
                ('airport_id', models.IntegerField(primary_key=True, serialize=False)),
                ('airport_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ywry_airport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryFlight',
            fields=[
                ('flight_id', models.IntegerField(primary_key=True, serialize=False)),
                ('departure_time', models.DateTimeField()),
                ('departure_time_zone', models.CharField(max_length=30)),
                ('arrival_time', models.DateTimeField()),
                ('arrival_time_zone', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'ywry_flight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryInsuranceInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ywry_insurance_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryInsurancePlans',
            fields=[
                ('insurance_id', models.IntegerField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=1000)),
                ('cost_per_person', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
            options={
                'db_table': 'ywry_insurance_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryInvoice',
            fields=[
                ('invoice_id', models.IntegerField(primary_key=True, serialize=False)),
                ('invoice_date', models.DateTimeField()),
                ('invoice_amount', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
            options={
                'db_table': 'ywry_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryPassenger',
            fields=[
                ('passenger_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=30)),
                ('mname', models.CharField(blank=True, max_length=30, null=True)),
                ('lname', models.CharField(max_length=30)),
                ('dob', models.DateTimeField()),
                ('nationaliry', models.CharField(max_length=30)),
                ('gender', models.CharField(max_length=1)),
                ('passport_number', models.CharField(max_length=30)),
                ('passport_expiry_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'ywry_passenger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField()),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('method', models.CharField(max_length=30)),
                ('card_number', models.CharField(max_length=20)),
                ('name_on_card', models.CharField(max_length=30)),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'ywry_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwrySpeRequest',
            fields=[
                ('assistance_id', models.IntegerField(primary_key=True, serialize=False)),
                ('assistance_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ywry_spe_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryTravelDetail',
            fields=[
                ('travel_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cabin_class', models.CharField(max_length=2)),
                ('meal_plan', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'ywry_travel_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryTravelRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ywry_travel_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('mname', models.CharField(blank=True, max_length=30, null=True)),
                ('nationality', models.CharField(blank=True, max_length=30)),
                ('city', models.CharField(blank=True, max_length=30)),
                ('street', models.CharField(blank=True, max_length=30)),
                ('zipcode', models.IntegerField(blank=True, default=0)),
                ('emer_contact_num', models.CharField(blank=True, max_length=14)),
                ('emer_contact_person', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, max_length=1)),
                ('numbers_passengers', models.SmallIntegerField(blank=True, default=1)),
                ('customer_type', models.CharField(blank=True, max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='YwryAgent',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.customuser')),
                ('agent_name', models.CharField(max_length=30)),
                ('agent_web', models.CharField(max_length=30)),
                ('agent_phone', models.CharField(max_length=14)),
            ],
            options={
                'db_table': 'ywry_agent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YwryMember',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.customuser')),
                ('membership_name', models.CharField(max_length=30)),
                ('associated_airline', models.CharField(max_length=30)),
                ('mem_start_date', models.DateTimeField()),
                ('mem_end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ywry_member',
                'managed': False,
            },
        ),
    ]
